// Code generated by protoc-gen-go. DO NOT EDIT.
// source: withdrawal.proto

package withdrawal

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Withdrawal struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               int32                `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Date                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	TransactionId        int32                `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Withdrawal) Reset()         { *m = Withdrawal{} }
func (m *Withdrawal) String() string { return proto.CompactTextString(m) }
func (*Withdrawal) ProtoMessage()    {}
func (*Withdrawal) Descriptor() ([]byte, []int) {
	return fileDescriptor_729e0e9b3824e84b, []int{0}
}

func (m *Withdrawal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Withdrawal.Unmarshal(m, b)
}
func (m *Withdrawal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Withdrawal.Marshal(b, m, deterministic)
}
func (m *Withdrawal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Withdrawal.Merge(m, src)
}
func (m *Withdrawal) XXX_Size() int {
	return xxx_messageInfo_Withdrawal.Size(m)
}
func (m *Withdrawal) XXX_DiscardUnknown() {
	xxx_messageInfo_Withdrawal.DiscardUnknown(m)
}

var xxx_messageInfo_Withdrawal proto.InternalMessageInfo

func (m *Withdrawal) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Withdrawal) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Withdrawal) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Withdrawal) GetTransactionId() int32 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

type Request struct {
	AccountNumber        string   `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_729e0e9b3824e84b, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

type Response struct {
	Created              bool          `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Withdrawal           *Withdrawal   `protobuf:"bytes,2,opt,name=withdrawal,proto3" json:"withdrawal,omitempty"`
	Withdrawals          []*Withdrawal `protobuf:"bytes,3,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_729e0e9b3824e84b, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetWithdrawal() *Withdrawal {
	if m != nil {
		return m.Withdrawal
	}
	return nil
}

func (m *Response) GetWithdrawals() []*Withdrawal {
	if m != nil {
		return m.Withdrawals
	}
	return nil
}

func init() {
	proto.RegisterType((*Withdrawal)(nil), "moneytree.svc.withdrawal.Withdrawal")
	proto.RegisterType((*Request)(nil), "moneytree.svc.withdrawal.Request")
	proto.RegisterType((*Response)(nil), "moneytree.svc.withdrawal.Response")
}

func init() { proto.RegisterFile("withdrawal.proto", fileDescriptor_729e0e9b3824e84b) }

var fileDescriptor_729e0e9b3824e84b = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcf, 0x4e, 0xe2, 0x40,
	0x18, 0xdf, 0x02, 0x0b, 0xec, 0x47, 0x20, 0xec, 0x1c, 0x36, 0x0d, 0x97, 0xed, 0x36, 0xbb, 0x09,
	0x97, 0x9d, 0x2a, 0x1e, 0x50, 0x8f, 0x6a, 0x34, 0x5e, 0x3c, 0x54, 0x13, 0xa3, 0x07, 0xc9, 0x74,
	0xfa, 0x09, 0x93, 0xb4, 0x1d, 0x9c, 0x99, 0x42, 0x7c, 0x06, 0xdf, 0xc6, 0x07, 0xf1, 0x99, 0x0c,
	0x03, 0xa5, 0xbd, 0x60, 0x38, 0x7e, 0xbf, 0xf9, 0xfd, 0x99, 0xf9, 0x7d, 0x03, 0xfd, 0xa5, 0x30,
	0xb3, 0x58, 0xb1, 0x25, 0x4b, 0xe8, 0x5c, 0x49, 0x23, 0x89, 0x9b, 0xca, 0x0c, 0x5f, 0x8d, 0x42,
	0xa4, 0x7a, 0xc1, 0x69, 0x79, 0x3e, 0xf8, 0x3d, 0x95, 0x72, 0x9a, 0x60, 0x60, 0x79, 0x51, 0xfe,
	0x1c, 0x18, 0x91, 0xa2, 0x36, 0x2c, 0x9d, 0xaf, 0xa5, 0xfe, 0x9b, 0x03, 0x70, 0xbf, 0xe5, 0x93,
	0x1e, 0xd4, 0x44, 0xec, 0x3a, 0x9e, 0x33, 0xfc, 0x11, 0xd6, 0x44, 0x4c, 0x7e, 0x41, 0x93, 0xa5,
	0x32, 0xcf, 0x8c, 0x5b, 0xf3, 0x9c, 0xe1, 0xf7, 0x70, 0x33, 0x11, 0x0a, 0x8d, 0x98, 0x19, 0x74,
	0xeb, 0x9e, 0x33, 0xec, 0x8c, 0x06, 0x74, 0x1d, 0x43, 0x8b, 0x18, 0x7a, 0x57, 0xc4, 0x84, 0x96,
	0x47, 0xfe, 0x41, 0xcf, 0x28, 0x96, 0x69, 0xc6, 0x8d, 0x90, 0xd9, 0x44, 0xc4, 0x6e, 0xc3, 0xfa,
	0x75, 0x2b, 0xe8, 0x75, 0xec, 0x1f, 0x40, 0x2b, 0xc4, 0x97, 0x1c, 0xb5, 0x59, 0x29, 0x18, 0xe7,
	0xab, 0xb0, 0x49, 0x96, 0xa7, 0x11, 0xaa, 0xcd, 0xad, 0xba, 0x1b, 0xf4, 0xc6, 0x82, 0xfe, 0xbb,
	0x03, 0xed, 0x10, 0xf5, 0x5c, 0x66, 0x1a, 0x89, 0x0b, 0x2d, 0xae, 0x90, 0x19, 0x5c, 0x3f, 0xa1,
	0x1d, 0x16, 0x23, 0xb9, 0x00, 0x28, 0x5b, 0xb1, 0x6f, 0xe9, 0x8c, 0xfe, 0xd2, 0x5d, 0xb5, 0xd1,
	0xb2, 0x91, 0xb0, 0xa2, 0x23, 0x97, 0xd0, 0x29, 0x27, 0xed, 0xd6, 0xbd, 0xfa, 0xde, 0x36, 0x55,
	0xe1, 0xe8, 0xc3, 0x81, 0x9f, 0xe5, 0xd9, 0x2d, 0xaa, 0x85, 0xe0, 0x48, 0x9e, 0xa0, 0x7f, 0x6e,
	0xaf, 0x5b, 0xd9, 0xc7, 0x5e, 0xe6, 0x03, 0x7f, 0x37, 0xab, 0xe8, 0xc6, 0xff, 0x46, 0x1e, 0xa0,
	0x77, 0x85, 0xa6, 0x94, 0x69, 0xf2, 0xe7, 0x2b, 0x9d, 0x5d, 0xc3, 0x7e, 0xd6, 0x67, 0xa7, 0x8f,
	0xc7, 0x53, 0x61, 0x66, 0x79, 0x44, 0xb9, 0x4c, 0x03, 0x3e, 0x53, 0x42, 0x2f, 0x45, 0x92, 0x08,
	0x96, 0xea, 0xc3, 0x93, 0xf1, 0x38, 0xd8, 0x7a, 0xfc, 0xb7, 0x3f, 0x44, 0x07, 0xa5, 0x4d, 0xd4,
	0xb4, 0xd0, 0xd1, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0xe3, 0x25, 0xaa, 0xd7, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for WithdrawalService service

type WithdrawalServiceClient interface {
	CreateWithdrawal(ctx context.Context, in *Withdrawal, opts ...client.CallOption) (*Response, error)
	GetWithdrawals(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type withdrawalServiceClient struct {
	c           client.Client
	serviceName string
}

func NewWithdrawalServiceClient(serviceName string, c client.Client) WithdrawalServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "moneytree.svc.withdrawal"
	}
	return &withdrawalServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *withdrawalServiceClient) CreateWithdrawal(ctx context.Context, in *Withdrawal, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "WithdrawalService.CreateWithdrawal", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *withdrawalServiceClient) GetWithdrawals(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "WithdrawalService.GetWithdrawals", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WithdrawalService service

type WithdrawalServiceHandler interface {
	CreateWithdrawal(context.Context, *Withdrawal, *Response) error
	GetWithdrawals(context.Context, *Request, *Response) error
}

func RegisterWithdrawalServiceHandler(s server.Server, hdlr WithdrawalServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&WithdrawalService{hdlr}, opts...))
}

type WithdrawalService struct {
	WithdrawalServiceHandler
}

func (h *WithdrawalService) CreateWithdrawal(ctx context.Context, in *Withdrawal, out *Response) error {
	return h.WithdrawalServiceHandler.CreateWithdrawal(ctx, in, out)
}

func (h *WithdrawalService) GetWithdrawals(ctx context.Context, in *Request, out *Response) error {
	return h.WithdrawalServiceHandler.GetWithdrawals(ctx, in, out)
}
