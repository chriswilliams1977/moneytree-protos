// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bank.proto

package bank

import (
	fmt "fmt"
	address "github.com/chriswilliams1977/moneytree-protos/address"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Bank struct {
	Id                   int32            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RoutingNumber        int32            `protobuf:"varint,3,opt,name=routing_number,json=routingNumber,proto3" json:"routing_number,omitempty"`
	Address              *address.Address `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	PhoneNumbers         []string         `protobuf:"bytes,5,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"`
	EmailAddress         string           `protobuf:"bytes,6,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	Uuid                 string           `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Bank) Reset()         { *m = Bank{} }
func (m *Bank) String() string { return proto.CompactTextString(m) }
func (*Bank) ProtoMessage()    {}
func (*Bank) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{0}
}

func (m *Bank) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bank.Unmarshal(m, b)
}
func (m *Bank) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bank.Marshal(b, m, deterministic)
}
func (m *Bank) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bank.Merge(m, src)
}
func (m *Bank) XXX_Size() int {
	return xxx_messageInfo_Bank.Size(m)
}
func (m *Bank) XXX_DiscardUnknown() {
	xxx_messageInfo_Bank.DiscardUnknown(m)
}

var xxx_messageInfo_Bank proto.InternalMessageInfo

func (m *Bank) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Bank) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bank) GetRoutingNumber() int32 {
	if m != nil {
		return m.RoutingNumber
	}
	return 0
}

func (m *Bank) GetAddress() *address.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Bank) GetPhoneNumbers() []string {
	if m != nil {
		return m.PhoneNumbers
	}
	return nil
}

func (m *Bank) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *Bank) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

// Created a blank get request
type Request struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Response struct {
	Created              bool     `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Bank                 *Bank    `protobuf:"bytes,2,opt,name=bank,proto3" json:"bank,omitempty"`
	Banks                []*Bank  `protobuf:"bytes,3,rep,name=banks,proto3" json:"banks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetBank() *Bank {
	if m != nil {
		return m.Bank
	}
	return nil
}

func (m *Response) GetBanks() []*Bank {
	if m != nil {
		return m.Banks
	}
	return nil
}

func init() {
	proto.RegisterType((*Bank)(nil), "moneytree.svc.bank.Bank")
	proto.RegisterType((*Request)(nil), "moneytree.svc.bank.Request")
	proto.RegisterType((*Response)(nil), "moneytree.svc.bank.Response")
}

func init() { proto.RegisterFile("bank.proto", fileDescriptor_a6371916d5cb63b4) }

var fileDescriptor_a6371916d5cb63b4 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xbd, 0x6e, 0xdb, 0x30,
	0x14, 0x85, 0x2b, 0x4b, 0xb6, 0xec, 0xeb, 0x9f, 0x81, 0x13, 0xeb, 0x16, 0x85, 0xa0, 0xa2, 0x80,
	0x86, 0x96, 0x46, 0xd5, 0x02, 0x6e, 0xc7, 0xba, 0x80, 0xbb, 0x75, 0x60, 0xb7, 0x2e, 0x86, 0x7e,
	0x2e, 0x6c, 0xc2, 0x16, 0xe5, 0x90, 0x92, 0x83, 0xac, 0x79, 0x8f, 0x3c, 0x60, 0xde, 0x22, 0x20,
	0x25, 0x05, 0x48, 0xe2, 0x24, 0x13, 0x79, 0x2f, 0x3f, 0x9e, 0x7b, 0x78, 0x24, 0x80, 0x34, 0x91,
	0x7b, 0x76, 0x54, 0x65, 0x55, 0x12, 0x52, 0x94, 0x12, 0xaf, 0x2a, 0x85, 0xc8, 0xf4, 0x29, 0x63,
	0xe6, 0x64, 0x3e, 0x4d, 0xf2, 0x5c, 0xa1, 0xd6, 0x0d, 0x12, 0xde, 0x3a, 0xe0, 0xad, 0x12, 0xb9,
	0x27, 0x33, 0xe8, 0x89, 0x9c, 0x3a, 0x81, 0x13, 0xf5, 0x79, 0x4f, 0xe4, 0x84, 0x80, 0x27, 0x93,
	0x02, 0x69, 0x2f, 0x70, 0xa2, 0x11, 0xb7, 0x7b, 0xf2, 0x09, 0x66, 0xaa, 0xac, 0x2b, 0x21, 0xb7,
	0x1b, 0x59, 0x17, 0x29, 0x2a, 0xea, 0x5a, 0x7e, 0xda, 0x76, 0xff, 0xda, 0x26, 0xf9, 0x01, 0x7e,
	0x3b, 0x84, 0x7a, 0x81, 0x13, 0x8d, 0xe3, 0x0f, 0xec, 0xa1, 0x91, 0xce, 0xc2, 0xaf, 0x66, 0xe5,
	0x1d, 0x4e, 0x3e, 0xc2, 0xf4, 0xb8, 0x2b, 0x25, 0xb6, 0xf2, 0x9a, 0xf6, 0x03, 0x37, 0x1a, 0xf1,
	0x89, 0x6d, 0x36, 0xea, 0x16, 0xc2, 0x22, 0x11, 0x87, 0x4d, 0x37, 0x64, 0x60, 0x2d, 0x4e, 0x6c,
	0xb3, 0x95, 0x34, 0xf6, 0xeb, 0x5a, 0xe4, 0xd4, 0x6f, 0xec, 0x9b, 0x7d, 0xf8, 0x16, 0x7c, 0x8e,
	0x17, 0x35, 0xea, 0xea, 0xf1, 0x6b, 0xc3, 0x6b, 0x07, 0x86, 0x1c, 0xf5, 0xb1, 0x94, 0x1a, 0x09,
	0x05, 0x3f, 0x53, 0x98, 0x54, 0xd8, 0x10, 0x43, 0xde, 0x95, 0xe4, 0x33, 0x78, 0x26, 0x44, 0x1b,
	0xca, 0x38, 0xa6, 0xec, 0x69, 0xbe, 0xcc, 0x84, 0xc9, 0x2d, 0x45, 0x18, 0xf4, 0xcd, 0xaa, 0xa9,
	0x1b, 0xb8, 0x2f, 0xe2, 0x0d, 0x16, 0xdf, 0x38, 0x30, 0x36, 0xf5, 0x3f, 0x54, 0x27, 0x91, 0x21,
	0x59, 0x03, 0xfc, 0xb6, 0x83, 0xed, 0x07, 0x7a, 0xf6, 0xfa, 0xfc, 0xfd, 0xb9, 0x93, 0xee, 0x35,
	0xe1, 0x1b, 0xb2, 0x06, 0xff, 0x0f, 0x56, 0x56, 0xe4, 0xdd, 0x79, 0xd4, 0x86, 0xf2, 0x9a, 0xce,
	0xea, 0xfb, 0xff, 0x78, 0x2b, 0xaa, 0x5d, 0x9d, 0xb2, 0xac, 0x2c, 0x16, 0xd9, 0x4e, 0x09, 0x7d,
	0x29, 0x0e, 0x07, 0x91, 0x14, 0xfa, 0xeb, 0xcf, 0xe5, 0x72, 0x71, 0x7f, 0xfb, 0x8b, 0xfd, 0xb7,
	0xf4, 0xc2, 0x08, 0xa4, 0x03, 0x5b, 0x7c, 0xbb, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xca, 0x7c, 0xa6,
	0x1f, 0x99, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for BankService service

type BankServiceClient interface {
	CreateBank(ctx context.Context, in *Bank, opts ...client.CallOption) (*Response, error)
	GetBank(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type bankServiceClient struct {
	c           client.Client
	serviceName string
}

func NewBankServiceClient(serviceName string, c client.Client) BankServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "moneytree.svc.bank"
	}
	return &bankServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *bankServiceClient) CreateBank(ctx context.Context, in *Bank, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "BankService.CreateBank", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankServiceClient) GetBank(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "BankService.GetBank", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BankService service

type BankServiceHandler interface {
	CreateBank(context.Context, *Bank, *Response) error
	GetBank(context.Context, *Request, *Response) error
}

func RegisterBankServiceHandler(s server.Server, hdlr BankServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&BankService{hdlr}, opts...))
}

type BankService struct {
	BankServiceHandler
}

func (h *BankService) CreateBank(ctx context.Context, in *Bank, out *Response) error {
	return h.BankServiceHandler.CreateBank(ctx, in, out)
}

func (h *BankService) GetBank(ctx context.Context, in *Request, out *Response) error {
	return h.BankServiceHandler.GetBank(ctx, in, out)
}
